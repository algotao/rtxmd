// Copyright (c) 2019 Tencent Inc.

// RTA实时交互协议使用protocol v2进行定义，请保持该版本标识
syntax = "proto2";

package tencent.ad.rta;

option java_outer_classname = "RtaProtos";

// RTA请求消息结构
message RtaRequest {
  optional string id = 1;                                      // 请求ID
  optional bool is_ping = 2;                                   // 网络耗时监测模式
  optional bool is_test = 3;                                   // 模拟测试模式

  enum OperatingSystem {                                       // 操作系统枚举
    OS_UNKNOWN = 0;
    OS_IOS = 1;
    OS_ANDROID = 2;
    OS_WINDOWS = 3;
    OS_SYMBIAN = 4;
    OS_JAVA = 5;
  }
  
  message Device {                                             // 设备信息    
    optional OperatingSystem os = 1;                           // 操作系统类型
    optional string idfa_md5sum = 2;                           // iOS设备的IDFA MD5值
    optional string imei_md5sum = 3;                           // Android设备的IMEI MD5值
    optional string android_id_md5sum = 4;                     // Android设备的Android ID MD5值
    optional string mac_md5sum = 5;                            // 设备的MAC MD5值
    optional string oaid_md5sum = 6;                           // Android设备的OAID MD5值
    optional string ip = 7;                                    // 用户IP

    enum DeviceIdTag {                                         // 不可信设备类型
      IDFA_MD5_DOUBTFUL = 0;
      IMEI_MD5_DOUBTFUL = 1;
      ANDROIDID_MD5_DOUBTFUL = 2;
      MAC_MD5_DOUBTFUL = 3;
      OAID_MD5_DOUBTFUL = 4;
      OAID_DOUBTFUL = 5;
      QAID_DOUBTFUL = 6;
    }
    repeated DeviceIdTag doubtful_ids_list = 9;                // 设备ID不可信标志

    enum CacheDeviceIdType {                                   // 策略缓存设备key类型
      IDFA_MD5 = 0;                                            // IDFA MD5
      IMEI_MD5 = 1;                                            // IMEI MD5
      OAID = 2;                                                // OAID
      OAID_MD5 = 3;                                            // OAID MD5
      ANDROIDID_MD5 = 4;                                       // ANDROIDID MD5
      MAC_MD5 = 5;                                             // MAC MD5
      NIL = 6;                                                 // 空设备号
      QAID = 7;                                                // CAID
    }
    optional CacheDeviceIdType cached_deviceid_type = 10;      // 策略缓存设备类型

    message QaidInfo {                                         // CAID信息
      optional uint32 version = 1;                             // CAID版本
      optional string qaid = 2;                                // CAID原始值
      optional string origin_version = 3;                      // CAID版本
      optional string qaid_md5sum = 4;                         // CAID MD5
    }
    repeated QaidInfo qaid_infos = 13;

    message WxOpenid {                                         // 微信openid
      optional string appid = 1;                               // 小程序appid
      optional string openid = 2;                              // 对应的openid
    }
    repeated WxOpenid wx_openid = 14;
  }
  optional Device device = 5;

  optional uint64 siteset_id = 6;                              // *(已禁用) 流量站点集

  message RequestInfo {                                        // 请求的扩展信息  
    enum RequestType {                                         // 请求类型
      NORMAL_REQUEST = 0;                                      // 普通请求
      ADLIST_REQUEST = 2;                                      // 二次请求
    }
    optional RequestType request_type = 1;                     // 请求类型
  }
  optional RequestInfo request_info = 8;                       // 请求的扩展信息  

  message Experiment {                                         // 实验信息
    optional uint32 exp_id = 1;                                // 实验分组ID
  }
  repeated Experiment exps = 9;

  message AdInfo {                                             // *二次请求*，粗排检索出的广告列表
    optional uint64 adgroup_id = 1;                            // 广告组ID

    message CreativeInfo {                                     // 广告上的创意信息
      optional uint64 creative_id = 1;                         // 创意ID
      optional uint32 crt_template_id = ;                      // 创意形式ID
    }
    repeated CreativeInfo creative_infos = 2;

    message ProductInfo {                                      // 广告上的商品信息
      optional uint64 product_lib = 1;                         // 商品库ID
      optional string out_product_id = 2;                      // 外部商品ID
    }
    repeated ProductInfo product_infos = 3;
    
    optional uint32 advertiser_id = 4;                         // 账号ID
    optional string out_target_id = 5;                         // 外部策略ID
  }
  repeated AdInfo ad_infos = 11;

  optional string unified_request_id = 12;                     // 广告系统请求唯一标识

  message FLModel {                                            // *联邦学习*，模型信息
    optional uint64 model_id = 1;                              // 模型ID
    optional string model_name = 2;                            // 模型名称
    optional string model_version = 3;                         // 模型版本

    enum ModelType { DEFAULT = 0; }                            // 模型类型
    optional ModelType model_type = 4;
    repeated float embedding = 5 [ packed = true ];            // 模型数据
  }
  repeated FLModel fl_models = 14;
  repeated uint32 crt_template_id = 15 [packed=true];          // *二次请求*，创意形式ID
  repeated string rta_trace_id_list = 18;                      // *二次请求*，本次召回的广告是哪些一次请求返回的，可能有多个
  optional uint64 ad_request_time = 19;                        // *二次请求*，广告处理时间，后台链路统一
}

message DynamicProductInfo {                                   // *DPA*，商品信息
  optional uint64 product_lib = 1;                             // 商品库ID
  
  message Product {                                            // 商品信息
    optional uint64 id = 1;                                    // mDPA商品ID
    optional uint32 priority = 2;                              // 商品推荐权重
    optional uint64 timestamp = 3;                             // 用户与商品互动时间
    optional string sdpa_product_id = 4;                       // sDPA商品ID
    optional string id_str = 5;                                // 字符串型商品ID，同上方ID字段二选一，请优先使用ID字段
  }
  repeated Product products = 2;
}

message DynamicContentInfo {                                  // *DCA*，动态创意信息
  message Tag {                                               // 动态创意标签信息
    optional string name = 1;                                 // 标签名称
    optional string value = 2;                                // 标签值，预留
  }
  repeated Tag tags = 1;
}

// RTA返回消息结构
message RtaResponse {
  optional string request_id = 1;                              // 回复ID，应原样填入RtaRequest.id（可不填）
  optional uint32 code = 2;                                    // 返回的状态码
  optional int32 processing_time_ms = 4;                       // 处理时间
  optional uint32 response_cache_time = 7;                     // 自定义缓存时间
  optional uint64 dsp_tag = 8;                                 // 自定义归因串联字段，全局级（数字型）
  repeated DynamicProductInfo dynamic_product_infos = 9;       // *mDPA*，推荐商品信息
  repeated string out_target_id = 10;                          // 被调方策略ID

  enum SpAssistType {                                          // *SP*，辅助决策的合作类型
    NONE = 0;                                                  // 禁用辅助决策
    REPLACE_ALL = 1;                                           // 允许辅助替换策略ID和高阶出价
    REPLACE_TARGETINFO = 2;                                    // 只允许辅助替换高阶出价
  }

  message SpAssist {                                           // *SP*，辅助决策
    optional SpAssistType type = 1;                            // 辅助决策的合作类型
  }

  message TargetInfo {                                         // 策略/商品/广告主/广告扩展信息
    optional string out_target_id = 1;                         // 策略ID
    optional uint32 cpc_price = 3;                             // CPC出价
    repeated DynamicProductInfo dynamic_product_infos = 4;     // *mDPA*，推荐商品信息
    optional uint32 cpa_price = 5;                             // CPA出价
    optional float user_weight_factor = 6;                     // 用户加权系数
    optional float cpc_factor = 7;                             // CPC系数
    optional uint64 aid = 8;                                   // 广告组ID
    optional uint64 dsp_tag = 9;                               // 自定义归因串联字段，策略级（数字型）
    optional string dsp_tag_str = 10;                          // 自定义归因串联字段，策略级（字符型）
    optional float pcvr = 11;                                  // pCVR回传
    optional uint64 advertiser_id = 12;                        // 广告主ID
    optional string sdpa_product_id = 14;                      // *sDPA*，商品ID
    optional uint64 sdpa_product_lib = 15;                     // *sDPA*，商品库ID
    repeated DynamicContentInfo dynamic_content_infos = 17;    // *DCA*，动态创意信息
    optional SpAssist sp_action = 18;                          // *SP*，辅助决策
  }
  repeated TargetInfo target_infos = 12;

  repeated uint64 aid_whitelist = 13 [ packed = true ];        // 广告组ID白名单
    
  message AdResult {                                           // *二次请求*，广告改价结果
    optional uint64 adgroup_id = 1;                            // 广告组ID

    message CreativeResult {                                   // 广告上的创意信息      
      optional uint64 creative_id = 1;                         // 创意ID
      optional uint32 cpc_price = 2;                           // 创意级CPC改价，改价优先级：商品＞创意＞广告级，单位：分
      optional float out_raise_factor = 3;                     // 客户侧扶持系数
      optional uint32 cpa_price = 4;                           // 创意级CPA改价，改价优先级：创意＞广告级，单位：分
    }
    repeated CreativeResult creative_results = 2;
    
    optional uint32 cpc_price = 3;                             // 广告级CPC改价，改价优先级：创意＞广告级，单位：分
    optional bool ignore = 4;                                  // 是否跳过二次请求相关改价和校验逻辑，由媒体决定广告出单

    message ProductResult {                                    // 广告上的商品信息
      optional uint64 product_lib = 1;                         // 商品库ID
      optional string out_product_id = 2;                      // 外部商品ID
      optional uint32 cpc_price = 3;                           // 商品级CPC改价，改价优先级：商品＞创意＞广告级，单位：分
    }
    repeated ProductResult product_results = 5;
  
    optional uint32 cpa_price = 6;                             // 广告级CPA改价，改价优先级：创意＞广告级，单位：分
  }
  repeated AdResult ad_results = 14;

  message FLModelResInfo {                                     // *联邦学习*，模型使用情况
    optional uint64 model_id = 1;                              // 模型ID

    enum Status {                                              // 模型使用状态
      UNKNOWN = 0;
      SUCCESS = 1;
      FAILED = 2;
    }
    optional Status status = 2;
  }
  repeated FLModelResInfo fl_model_res_infos = 16;

  optional string dsp_tag_str = 17;                            // 自定义归因串联字段，全局级（字符型）
  repeated DynamicProductInfo sdpa_dynamic_product_infos = 18; // *sDPA*，商品推荐
}